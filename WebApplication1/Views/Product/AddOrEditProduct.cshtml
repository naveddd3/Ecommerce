@using Domain.Entities
@model ProductVM
@{
    var categories = new SelectList(Model.MasterCategories, "CategoryId", "CategoryName");
}

<style>
    .img-thumbs {
        background: #eee;
        border: 1px solid #ccc;
        border-radius: 0.25rem;
        margin: 1.5rem 0;
        padding: 0.75rem;
    }

    .img-thumbs-hidden {
        display: none;
    }

    .wrapper-thumb {
        position: relative;
        display: inline-block;
        margin: 1rem 0;
        justify-content: space-around;
    }

    .img-preview-thumb {
        background: #fff;
        border: 1px solid none;
        border-radius: 0.25rem;
        box-shadow: 0.125rem 0.125rem 0.0625rem rgba(0, 0, 0, 0.12);
        margin-right: 1rem;
        max-width: 140px;
        padding: 0.25rem;
    }

    .remove-btn {
        position: absolute;
        display: flex;
        justify-content: center;
        align-items: center;
        font-size: .7rem;
        top: -5px;
        right: 10px;
        width: 20px;
        height: 20px;
        background: white;
        border-radius: 10px;
        font-weight: bold;
        cursor: pointer;
    }

        .remove-btn:hover {
            box-shadow: 0px 0px 3px grey;
            transition: all .3s ease-in-out;
        }
</style>
<div class="row">
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <a href="/Products" class="btn btn-success mb-2 me-1">
                    <i class="ri-arrow-left-line"></i>
                    Back To List
                </a>
                <ul class="nav nav-tabs nav-bordered mb-3">
                </ul>
                <div class="row">
                    <div class="col-4">
                        <input type="hidden" asp-for="product.ProductId" />
                        <label name="ProductName">Product Name :</label>
                        <input class="form-control" type="text" placeholder="Enter Name" asp-for="product.ProductName" required>
                    </div>
                    <div class="col-4">
                        <label asp-for="product.CategoryId">Category:</label>
                        <select asp-for="product.CategoryId" asp-items="@categories" class="form-control" required>
                            <option value="0">Select a Category</option>
                        </select>
                    </div>
                    <div class="col-4">
                        <label asp-for="product.MRP">MRP:</label>
                        <input asp-for="product.MRP" class="form-control" type="number" placeholder="Enter MRP of Product" required>
                    </div>
                </div>
                <div class="row mt-2">
                    <div class="col-4">
                        <label asp-for="product.Discount">Discount in Percentage (%) :</label>
                        <input class="form-control" type="number" placeholder="Enter Discount in Percentage" asp-for="product.Discount" maxlength="3" max="100" required>
                        <span id="error-message" style="color:red; display:none;">Value cannot be greater than 100</span>
                    </div>
                    <div class="col-4">
                        <label asp-for="product.Description">Description:</label>
                        <input asp-for="product.Description" class="form-control" type="text" placeholder="Enter Description of Product" required>
                    </div>
                    <div class="col-4">
                        <label asp-for="product.ImageUrl">Choose Images</label>
                        <input asp-for="product.ImageUrl" type="file" class="form-control" name="images[]" multiple id="ImageUrl" />
                    </div>
                </div>
                
                @if(Model.Images.Any() || Model.Images.Count()>0)
                {
                    <div class="img-thumbs img-thumbs" id="img-preview">
                        @foreach(var image in Model.Images)
                        {
                            <div class="wrapper-thumb" onclick="removeImagePopUp(@image.ProductImageId)">
                                <img src="@image.ImageURI" class="img-preview-thumb">
                            </div>
                        }
                    </div>
                }

                <div class="img-thumbs img-thumbs-hidden" id="img-preview"></div>
                <div style="display: flex;justify-content: end;">
                    <button onclick="SaveOrUpdate()" type="button" class="btn btn-success mb-2 me-1" style="margin-top: 2rem;">
                        Save Product
                    </button>
                </div>

                <div id="result" style="display: flex;"></div>
            </div>
        </div>
    </div>
</div>


<script>
    var imgUpload = document.getElementById('ImageUrl'),
        imgPreview = document.getElementById('img-preview'),
        totalFiles,
        img;

    imgUpload.addEventListener('change', previewImgs, true);

    function previewImgs(event) {
        totalFiles = imgUpload.files.length;

        if (!!totalFiles) {
            imgPreview.classList.remove('img-thumbs-hidden');
        }

        for (var i = 0; i < totalFiles; i++) {
            wrapper = document.createElement('div');
            wrapper.classList.add('wrapper-thumb');
            removeBtn = document.createElement("span");
            nodeRemove = document.createTextNode('x');
            removeBtn.classList.add('remove-btn');
            removeBtn.appendChild(nodeRemove);
            img = document.createElement('img');
            img.src = URL.createObjectURL(event.target.files[i]);
            img.classList.add('img-preview-thumb');
            wrapper.appendChild(img);
            wrapper.appendChild(removeBtn);
            imgPreview.appendChild(wrapper);

            $('.remove-btn').click(function () {
                $(this).parent('.wrapper-thumb').remove();
            });

        }

    }

   
</script>