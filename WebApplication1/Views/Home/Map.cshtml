@{
    Layout = null;
}

<!-- <script src="https://js.arcgis.com/4.6/"></script> -->
<div id="viewDiv"></div>
<div id="instruction">Click any location on the map to see its street address!</div>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <link rel="stylesheet" href="https://js.arcgis.com/4.7/esri/css/main.css">
    <title>Laura's Map</title>
    <style>
        html,
        body,
        #viewDiv {
         padding:0;
         margin:0;
         height:100%;
         width:100%;
        }
    </style>
    <link rel="stylesheet" href="https://js.arcgis.com/4.7/esri/css/main.css">
    <script src="https://js.arcgis.com/4.7/"></script>
    <script>
        require([
            "esri/Map",
            "esri/views/MapView",
            "esri/widgets/CoordinateConversion",
            "esri/widgets/Search",
            "esri/widgets/BasemapToggle",
            "esri/Graphic",
            "esri/tasks/Locator",
            "dojo/domReady!"
        ], function (
            Map,
            MapView,
            CoordinateConversion,
            Search,
            BasemapToggle,
            Graphic,
            Locator
        ) {
            var locatorTask = new Locator({
                url: "https://geocode.arcgis.com/arcgis/rest/services/World/GeocodeServer",
            });

            var map = new Map({
                basemap: "streets-navigation-vector",
            });

            var view = new MapView({
                container: "viewDiv",
                map: map,
                zoom: 15,
                center: [-122.1009, 47.697028], // Default center
            });

            // Geolocation function
            function getLiveLocation() {
                if (navigator.geolocation) {
                    navigator.geolocation.getCurrentPosition(
                        function (position) {
                            const { latitude, longitude } = position.coords;

                            // Center the map on the user's location
                            view.center = [longitude, latitude];
                            view.zoom = 16;

                            // Add a graphic (marker) to the map
                            const pointGraphic = new Graphic({
                                geometry: {
                                    type: "point", // autocasts as new Point()
                                    longitude: longitude,
                                    latitude: latitude,
                                },
                                symbol: {
                                    type: "simple-marker", // autocasts as new SimpleMarkerSymbol()
                                    color: "blue",
                                    size: "10px",
                                },
                            });
                            view.graphics.add(pointGraphic);

                            // Display a popup at the user's location
                            view.popup.open({
                                title: "Your Location",
                                content: `Latitude: ${latitude}, Longitude: ${longitude}`,
                                location: { latitude, longitude },
                            });
                        },
                        function (error) {
                            alert("Unable to fetch location: " + error.message);
                        }
                    );
                } else {
                    alert("Geolocation is not supported by your browser.");
                }
            }

            // Add widgets
            var searchWidget = new Search({
                view: view,
            });

            var ccWidget = new CoordinateConversion({
                view: view,
            });

            var toggle = new BasemapToggle({
                view: view,
                nextBasemap: "hybrid",
            });

            view.ui.add(toggle, "top-right");
            view.ui.add(ccWidget, "bottom-left");
            view.ui.add(searchWidget, { position: "top-right" });

            // Call getLiveLocation to fetch and display the user's location
            getLiveLocation();

            view.on("click", function (event) {
                event.stopPropagation();
                locatorTask
                    .locationToAddress(event.mapPoint)
                    .then(function (response) {
                        view.popup.open({
                            title: "Location Info",
                            content: response.address,
                            location: event.mapPoint,
                        });
                    })
                    .catch(function (err) {
                        view.popup.open({
                            title: "No address found",
                            content: "No address was found for this location. Error: " + err.message,
                            location: event.mapPoint,
                        });
                    });
            });
        });
    </script>

</head>
<body>
    <div id="viewDiv"></div>
</body>
